{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","getMovieData","event","setState","target","name","value","submit","movieData","props","addMovie","pattern","onSubmit","this","htmlFor","id","type","onChange","required","rows","placeholder","Component","App","moviesFromServer","preventDefault","previous","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edc2167c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imdbId: '',\n    imdbUrl: '',\n    imgUrl: '',\n  };\n\n  getMovieData = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  submit = (event) => {\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state;\n\n    this.setState({\n      title: '',\n      description: '',\n      imdbId: '',\n      imdbUrl: '',\n      imgUrl: '',\n    });\n\n    const movieData = {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    };\n\n    return (\n      this.props.addMovie(event, movieData)\n    );\n  }\n\n  render() {\n    const pattern = {\n      imgUrl: '(http(s?):\\\\/\\\\/)?(\\\\S)*\\\\.(?:jpg|gif|png)',\n      imdbUrl: '(http(s?):\\\\/\\\\/)?(www.imdb.com\\\\/title\\\\/(.{2})\\\\w{7})(\\\\/)?$',\n      imdbId: '(.{2})\\\\w{7}$',\n    };\n\n    return (\n      <form\n        className=\"addMovieForm\"\n        onSubmit={this.submit}\n      >\n        <label htmlFor=\"movieTitle\">Enter a movie title:</label>\n        <input\n          name=\"title\"\n          id=\"movieTitle\"\n          type=\"text\"\n          value={this.state.title}\n          onChange={event => this.getMovieData(event)}\n          className=\"addMovieForm__element\"\n          required\n        />\n\n        <label htmlFor=\"movieDescription\">Enter a movie description:</label>\n        <textarea\n          name=\"description\"\n          id=\"movieDescription\"\n          type=\"text\"\n          value={this.state.description}\n          onChange={event => this.getMovieData(event)}\n          className=\"addMovieForm__element\"\n          rows=\"5\"\n          required\n        />\n\n        <label\n          htmlFor=\"moviePosterURL\"\n        >\n          Enter a movie poster direct link:\n        </label>\n        <input\n          name=\"imgUrl\"\n          id=\"moviePosterURL\"\n          type=\"text\"\n          value={this.state.imgUrl}\n          onChange={event => this.getMovieData(event)}\n          placeholder=\"site.com/img.png\"\n          className=\"addMovieForm__element\"\n          required\n          pattern={pattern.imgUrl}\n        />\n\n        <label htmlFor=\"movieImdbURL\">Enter a movie IMDB URL:</label>\n        <input\n          name=\"imdbUrl\"\n          id=\"movieImdbURL\"\n          type=\"text\"\n          value={this.state.imdbUrl}\n          onChange={event => this.getMovieData(event)}\n          placeholder=\"www.imdb.com/title/tt1234567\"\n          className=\"addMovieForm__element\"\n          required\n          pattern={pattern.imdbUrl}\n        />\n\n        <label htmlFor=\"movieImdbID\">Enter a movie IMDB id:</label>\n        <input\n          name=\"imdbId\"\n          id=\"movieImdbID\"\n          type=\"text\"\n          value={this.state.imdbId}\n          onChange={event => this.getMovieData(event)}\n          className=\"addMovieForm__element\"\n          placeholder=\"tt1234567\"\n          required\n          pattern={pattern.imdbId}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"addMovieForm__submit\"\n        >\n          Enter\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (event, movieData) => {\n    event.preventDefault();\n    this.setState(previous => ({\n      movies: [\n        ...previous.movies,\n        movieData,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}